{"version":3,"file":"reports.min.js","sources":["../src/reports.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * JS actions.\n *\n * @module      mod_codescore/reports\n * @copyright   2024 Devlion <info@devlion.co>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Tabulator from 'mod_codescore/tabulatorlib';\nimport {get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\n\nexport const init = async(data) => {\n    const rawParams = window.location.search;\n    const urlParams = new URLSearchParams(rawParams);\n    const cmid = urlParams.get('id') ? urlParams.get('id') : urlParams.get('cmid');\n    const link = (cell) => {\n        const name = cell.getValue();\n        const index = Number(cell.getRow().getIndex());\n        const attempt = cell.getRow().getData().attempt;\n        let userid;\n        if (document.getElementById('page-mod-codescore-view')) {\n            userid = data.attempts[0].userid;\n        }\n        else {\n            userid = cell.getRow().getData().userid;\n        }\n        cell.getRow().getElement().addEventListener('click', () => {\n            window.location.href = `report.php?cmid=${cmid}&userid=${userid}&attempt=${attempt}&index=${index}`;\n        });\n\n        return `<a href='report.php?cmid=${cmid}&userid=${userid}&attempt=${attempt}&index=${index}'>` + name + \"</a>\";\n    };\n\n    const dateFormatter = (cell) => {\n        const value = cell.getValue();\n        if (value === '0') {return '';}\n        const toDate = new Date(Number(value) * 1000).toString();\n        return toDate.split('GMT')[0];\n    };\n\n    const gradeFormatter = (cell) => {\n        if (cell.getRow().getData().timegraded === '0') { return ''; }\n        const value = cell.getValue();\n        return Number(value);\n    };\n\n    const deleteFormatter = (cell) => {\n        const index = cell.getRow().getIndex();\n        return `<input type=\"checkbox\" data-id=\"${index}\" class=\"tabulatorSelect\"/>`;\n    };\n\n    const aigradeFormatter = (cell) => {\n        if (cell.getValue() === null) { return ''; }\n        return Number(cell.getValue());\n    };\n\n    let inprogress = await getString('submittedstatus', 'mod_codescore');\n    let finished = await getString('finishedstatus', 'mod_codescore');\n    let pending = await getString('pendingstatus', 'mod_codescore');\n\n    const statusFormatter = (cell) => {\n        let result;\n        switch (cell.getValue()) {\n            case 'inprogress':\n                result = inprogress;\n                break;\n            case 'finished':\n                result = finished;\n                break;\n            case 'pending':\n                result = pending;\n                break;\n        }\n        return result;\n    };\n\n    if (!data.attempts[0]) {\n        document.getElementsByClassName('reportTitle')[0].className += ' hidden';\n        document.getElementById('tableWrapper').className += ' hidden';\n        let noReports = await getString('noreports', 'mod_codescore');\n        if (document.getElementById('page-mod-codescore-reports')) {\n            document.querySelector(\"[role=main]\").innerHTML = `<h3>${noReports}</h3>`;\n        }\n    }\n    let tabledata = data.attempts;\n    let table = new Tabulator(\"#tableWrapper\", {\n        data: tabledata, //assign data to table\n        layout: \"fitColumns\", //fit columns to width of table (optional)\n        textDirection: \"ltr\",\n        columns: [ //Define Table Columns\n            {\n                title: \"\", field: \"deletebtn\", widthGrow: 0.1, formatter: deleteFormatter,\n                hozAlign: \"center\", vertAlign: 'center', headerSort: false, resizable: false\n            },\n            {\n                title: await getString('tablename', 'mod_codescore'), field: \"username\",\n                formatter: link, resizable: false, widthGrow: 1.5},\n            {\n                title: await getString('startedat', 'mod_codescore'),\n                field: \"timestart\", formatter: dateFormatter, resizable: false,\n                widthGrow: 1.5\n            },\n            {\n                title: await getString('timefinish', 'mod_codescore'), field: \"timefinish\",\n                formatter: dateFormatter, resizable: false,\n                widthGrow: 1.5},\n            {\n                title: await getString('timegraded', 'mod_codescore'),\n                field: \"timegraded\", formatter: dateFormatter, resizable: false,\n                widthGrow: 1.5},\n            {\n                title: await getString('tableteachergrade', 'mod_codescore'),\n                field: \"grade\", formatter: gradeFormatter, resizable: false},\n            {\n                title: await getString('tableaigrade', 'mod_codescore'),\n                field: \"aigrade\", formatter: aigradeFormatter, resizable: false},\n            {\n                title: await getString('statusattempt', 'mod_codescore'),\n                field: \"state\", formatter: statusFormatter, resizable: false},\n        ],\n    });\n    // Event listeners\n\n    const modifyBtns = () => {\n        const deleteBtn = document.getElementById('deleteAttempts');\n        const regradeBtn = document.getElementById('regradeAttempts');\n        if (!table.getSelectedData()[0]) {\n            deleteBtn.className = 'disabled btn btn-secondary mb-2';\n            regradeBtn.className = 'disabled btn btn-secondary mb-2';\n        }\n        else {\n            deleteBtn.className = 'btn btn-secondary mb-2';\n            regradeBtn.className = 'btn btn-secondary mb-2';\n        }\n    };\n\n    table.on(\"renderComplete\", () => {\n        document.querySelectorAll('.tabulatorSelect').forEach((el) => {\n            el.addEventListener('click', (e) => {\n                if (!document.querySelectorAll('.tabulatorSelect:not(:checked)')[0]) {\n                    checkallbox.checked = true;\n                }\n                e.stopPropagation();\n                const id = e.target.dataset.id;\n                if (e.target.checked) {\n                    table.selectRow(Number(id));\n                } else {\n                    table.deselectRow(Number(id));\n                    checkallbox.checked = false;\n                }\n                modifyBtns();\n            });\n        });\n    });\n\n    const checkallbox = document.getElementById('checkallcheckbox');\n\n    document.getElementById('regradeAttempts').addEventListener('click', async () => {\n        // eslint-disable-next-line curly\n        if (!table.getSelectedData()) return;\n        const selected = table.getSelectedData().map((el) => {\n            return el.id;\n        });\n        await Ajax.call([{\n            methodname: 'mod_codescore_regrade_attempts',\n            args: {\n                ids: selected.join(\",\"),\n            },\n        }]);\n        location.reload();\n    });\n    document.getElementById('deleteAttemptsConfirm').addEventListener('click', async() => {\n        // eslint-disable-next-line curly\n        if (!table.getSelectedData()) return;\n        const selected = table.getSelectedData().map((el) => {\n            return el.id;\n        });\n        await Ajax.call([{\n            methodname: 'mod_codescore_delete_attempts',\n            args: {\n                ids: selected.join(\",\"),\n                cmid: cmid\n            },\n        }]);\n        location.reload();\n    });\n    if (!data.candelete) {\n        table.on(\"tableBuilt\", function () {\n            table.getColumns()[0].delete();\n        });\n    }\n\n    const modCheckboxes = (value) => {\n        const checkboxes = Array.from(document.getElementsByClassName('tabulatorSelect'));\n        checkboxes.forEach((el) => {\n            el.checked = value;\n        });\n    };\n\n    checkallbox.addEventListener('change', () => {\n        modCheckboxes(checkallbox.checked);\n        if (checkallbox.checked) {\n            table.selectRow('visible');\n            modifyBtns();\n            return;\n        }\n        table.deselectRow('visible');\n        modifyBtns();\n    });\n};"],"names":["async","rawParams","window","location","search","urlParams","URLSearchParams","cmid","get","dateFormatter","cell","value","getValue","Date","Number","toString","split","inprogress","finished","pending","data","attempts","document","getElementsByClassName","className","getElementById","noReports","querySelector","innerHTML","tabledata","table","Tabulator","layout","textDirection","columns","title","field","widthGrow","formatter","index","getRow","getIndex","hozAlign","vertAlign","headerSort","resizable","name","attempt","getData","userid","getElement","addEventListener","href","timegraded","result","modifyBtns","deleteBtn","regradeBtn","getSelectedData","on","querySelectorAll","forEach","el","e","checkallbox","checked","stopPropagation","id","target","dataset","selectRow","deselectRow","selected","map","Ajax","call","methodname","args","ids","join","reload","candelete","getColumns","delete","Array","from"],"mappings":"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"}